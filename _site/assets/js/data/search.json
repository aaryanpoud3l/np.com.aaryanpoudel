[
  
  {
    "title": "NeoVim Init Setup",
    "url": "/posts/init-neovimSetup.md/",
    "categories": "Setups",
    "tags": "init, setup, blog",
    "date": "2025-01-07 20:49:53 +0545",
    





    
    "snippet": "# NeovimNeovim is a cli based text editor written in lua. It's written in lua and is based on vim._Use :!q to quit or :wq to write & quit btw._## Installation on Mac```#Using HomeBrewbrew install n...",
    "content": "# NeovimNeovim is a cli based text editor written in lua. It's written in lua and is based on vim._Use :!q to quit or :wq to write & quit btw._## Installation on Mac```#Using HomeBrewbrew install neovim #Check the Installationnvim -v```## Configuration```#Setting up lazy.nvimmkdir ~/.config/nvim && nano ~/.config/nvim/init.lua && echo 'require(\"config.lazy\")>~/.config/nvim/init.lua```"
  },
  
  {
    "title": "Init Neovimsetup",
    "url": "/posts/init-neovimSetup/",
    "categories": "",
    "tags": "",
    "date": "2025-01-07 00:00:00 +0545",
    





    
    "snippet": "NeovimNeovim is a cli based text editor written in lua. It’s written in lua and is based on vim.Use :!q to quit or :wq to write &amp; quit btw.Installation on Mac#Using HomeBrewbrew install neovim ...",
    "content": "NeovimNeovim is a cli based text editor written in lua. It’s written in lua and is based on vim.Use :!q to quit or :wq to write &amp; quit btw.Installation on Mac#Using HomeBrewbrew install neovim #Check the Installationnvim -vConfiguration#Configure nvim using lazy.nvimmkdir ~/.config/nvim &amp;&amp; touch ~/.config/nvim/init.luaecho 'require(\"config.lazy\")' &gt; ~/.config/nvim/init.luamkdir ~/.config/nvim/lua/config &amp;&amp; touch ~/.config/nvim/lua/config/lazy.lua# Paste the following to the lazy.lua file-- Bootstrap lazy.nvimlocal lazypath = vim.fn.stdpath(\"data\") .. \"/lazy/lazy.nvim\"if not (vim.uv or vim.loop).fs_stat(lazypath) then  local lazyrepo = \"https://github.com/folke/lazy.nvim.git\"  local out = vim.fn.system({ \"git\", \"clone\", \"--filter=blob:none\", \"--branch=stable\", lazyrepo, lazypath })  if vim.v.shell_error ~= 0 then    vim.api.nvim_echo({      { \"Failed to clone lazy.nvim:\\n\", \"ErrorMsg\" },      { out, \"WarningMsg\" },      { \"\\nPress any key to exit...\" },    }, true, {})    vim.fn.getchar()    os.exit(1)  endendvim.opt.rtp:prepend(lazypath)-- Make sure to setup `mapleader` and `maplocalleader` before-- loading lazy.nvim so that mappings are correct.-- This is also a good place to setup other settings (vim.opt)vim.g.mapleader = \" \"vim.g.maplocalleader = \"\\\\\"-- Setup lazy.nvimrequire(\"lazy\").setup({  spec = {    -- import your plugins    { import = \"plugins\" },  },  -- Configure any other settings here. See the documentation for more details.  -- colorscheme that will be used when installing plugins.  install = { colorscheme = { \"habamax\" } },  -- automatically check for plugin updates  checker = { enabled = true },})"
  },
  
  {
    "title": "Jekyll Installation on Mac",
    "url": "/posts/init-jekyllSetup/",
    "categories": "Setups",
    "tags": "init, setup, staticsitegenerator, blog",
    "date": "2025-01-06 23:25:50 +0545",
    





    
    "snippet": "Jekyll is used to convert your markdown notes into a static site. This blog was created by converting my Obsidian notes written as .md and converting them to a static site using Jekyll.Setting up J...",
    "content": "Jekyll is used to convert your markdown notes into a static site. This blog was created by converting my Obsidian notes written as .md and converting them to a static site using Jekyll.Setting up Jekyll on Mac using Homebrew:# Install chruby (Version Manager) and ruby-install (Package Manager)brew install chruby ruby-install# Check the latest Ruby Version: https://jekyllrb.com/docs/installation/macos/#:~:text=Install%20the-,latest,-stable%20version%20ofruby-install ruby 3.3.5#To Add to the ~/.zhsrc file . Have these declared after the homebrew path declarationecho \"source $(brew --prefix)/opt/chruby/share/chruby/chruby.sh\" &gt;&gt; ~/.zshrcecho \"source $(brew --prefix)/opt/chruby/share/chruby/auto.sh\" &gt;&gt; ~/.zshrcecho \"chruby ruby-3.3.5\" &gt;&gt; ~/.zshrc# To Verify, use ruby -v to check the running version of Ruby#Install Jekyllgem install jekyll bundlerCommands#Project Setupjekyll new siteNamecd siteNamegit init#Serve Project Locally On: http://localhost:4000bundle exec jekyll serve --livereload#For Ddding Contentcd _posts/touch blogName.md#For Config Issuesjekyll doctor#To Build the Project for Productionjekyll build"
  },
  
  {
    "title": "CheatSheet for Markdown",
    "url": "/posts/tldr-markdown-cheatSheet/",
    "categories": "CheatSheets",
    "tags": "blog, cheatsheet, staticsitegenerator, tldr",
    "date": "2024-02-13 23:04:48 +0545",
    





    
    "snippet": "Markdown CheatSheetTypography:# H1## H2###### H6*italics* or _italics_**bold**~~strike~~Examples:H1H2H6italics or italicsboldstrikeURL &amp; Lists:[Click Me](example.com \"tooltip here\")1. Ordered I...",
    "content": "Markdown CheatSheetTypography:# H1## H2###### H6*italics* or _italics_**bold**~~strike~~Examples:H1H2H6italics or italicsboldstrikeURL &amp; Lists:[Click Me](example.com \"tooltip here\")1. Ordered Item 11. Ordered Item 21. Ordered Item 3* Unordered Item 1  * Unordered Item 2    * Unordered Item 3Examples:Click Me  Ordered Item 1  Ordered Item 2  Ordered Item 3  unordered list item 1          unordered list item 2                              unoreded list item 3            Code Block                              ` Inline Code Block ```` Basic Code Block ``````bashecho ('Codeblock with Syntax Highlighting')Example:` Inline Code Block `Basic Code Blockecho ('Codeblock with Syntax Highlighting')Extra: Horizontal Line:  --- or ___ &gt; This is BlockquoteExample:  This is Blockquote"
  },
  
  {
    "title": "PHP, Laravel, MySQL InitSetup on Ubuntu",
    "url": "/posts/init-laravelSetup/",
    "categories": "Setups",
    "tags": "laravel, mySQL, ubuntu, init, setup, blog",
    "date": "2024-02-10 23:12:48 +0545",
    





    
    "snippet": "The scripts have been verified on Ubuntu 22.04 LTS :Apache Setupsudo apt update -y; &amp;&amp; sudo apt upgrade -y;sudo apt install apache2;sudo systemctl enable apache2; &amp;&amp; sudo systemctl ...",
    "content": "The scripts have been verified on Ubuntu 22.04 LTS :Apache Setupsudo apt update -y; &amp;&amp; sudo apt upgrade -y;sudo apt install apache2;sudo systemctl enable apache2; &amp;&amp; sudo systemctl start apache2;sudo systemctl status apache2;PHP Setup. Use the PPA of ondrej for installing different versions of PHP later onsudo apt install software-properties-common;sudo add-apt-repository ppa:ondrej/php;sudo apt update;sudo apt-get install php php-fpm;sudo apt-get install php-mysql php-mbstring php-xml php-gd php-curl php-cli php-common php-imap php-redis php-snmp php-zip php-json;#PHP Version Changesudo update-alternatives --config php;Composer Setup. It’s a dependency manager for PHPcurl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/bin --filename=composer;composer;#Laravel Project Initcomposer create-project laravel/laravel projectNamephpMyAdmin Setupwget https://files.phpmyadmin.net/phpMyAdmin/5.2.0/phpMyAdmin-5.2.0-all-languages.zip;unzip phpMyAdmin-5.2.0-all-languages.zip;sudo mv phpMyAdmin-5.2.0-all-languages /usr/share/phpmyadmin; sudo mkdir /usr/share/phpmyadmin/tmp;sudo chown -R www-data:www-data /usr/share/phpmyadmin;sudo chmod 777 /usr/share/phpmyadmin/tmp;sudo nano /etc/apache2/conf-available/phpmyadmin.conf;After opening the conf, paste the following:Alias /phpmyadmin /usr/share/phpmyadminAlias /phpMyAdmin /usr/share/phpmyadmin&lt;Directory /usr/share/phpmyadmin/&gt;   AddDefaultCharset UTF-8   &lt;IfModule mod_authz_core.c&gt;      &lt;RequireAny&gt;      Require all granted     &lt;/RequireAny&gt;   &lt;/IfModule&gt;&lt;/Directory&gt; &lt;Directory /usr/share/phpmyadmin/setup/&gt;   &lt;IfModule mod_authz_core.c&gt;     &lt;RequireAny&gt;       Require all granted     &lt;/RequireAny&gt;   &lt;/IfModule&gt;&lt;/Directory&gt;#Enable Conf &amp; finish phpmyadmin setupsudo a2enconf phpmyadmin sudo systemctl restart apache2 MySQL Setupsudo apt install mysql-server;sudo mysql;#Inside mysql prompt setup db &amp; userCREATE DATABASE phpmadmin;CREATE USER 'array'@'localhost' IDENTIFIED BY 'password';GRANT ALL ON array.* TO 'array'@'localhost';FLUSH PRIVILEGES;ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';FLUSH PRIVILEGES;Node Setupcurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash;source ~/.bashrc;nvm install node;node --version;"
  },
  
  {
    "title": "Hugo Init Setup & CMD",
    "url": "/posts/init-hugoSetup/",
    "categories": "Setups",
    "tags": "init, setup, staticsitegenerator, blog",
    "date": "2023-11-28 02:30:53 +0545",
    





    
    "snippet": "Hugo is used for generating static sites using markdown. This blog has been created using Hugo.Get Hugo using apt on Ubuntu based distros:sudo apt install hugo;Commands#Project Setuphugo new site s...",
    "content": "Hugo is used for generating static sites using markdown. This blog has been created using Hugo.Get Hugo using apt on Ubuntu based distros:sudo apt install hugo;Commands#Project Setuphugo new site siteNamecd siteNamegit init#Sample hugo theme add as submodulegit submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/anankeecho \"theme = 'ananke'\" &gt;&gt; hugo.toml#Adding Contenthugo new content posts/postName.md#Serve Hugo Projects#for localhugo server#for productionhugo"
  },
  
  {
    "title": "QEMU Virtual Machine Setup",
    "url": "/posts/init-qemuSetup/",
    "categories": "Setups",
    "tags": "setup, vm, init, blog",
    "date": "2023-11-14 12:30:31 +0545",
    





    
    "snippet": "QEMU is a Level 0 HyperVisor and allows for the best VM performance in linux.Installation:sudo apt update -y; sudo apt upgrade -y; sudo apt autoremove -y; sudo apt autopurge;sudo apt install virt-m...",
    "content": "QEMU is a Level 0 HyperVisor and allows for the best VM performance in linux.Installation:sudo apt update -y; sudo apt upgrade -y; sudo apt autoremove -y; sudo apt autopurge;sudo apt install virt-manager qemu-kvm -y;"
  },
  
  {
    "title": "Virtual Machine",
    "url": "/posts/blog-virtualmachine/",
    "categories": "Blogs",
    "tags": "blog, vm",
    "date": "2023-11-14 11:54:24 +0545",
    





    
    "snippet": "Virtual Machine is an OS running over a base OS allowing users to run different operating systems on a single instanceHypervisors are the VM monitors used for making virtualization possible.It’s of...",
    "content": "Virtual Machine is an OS running over a base OS allowing users to run different operating systems on a single instanceHypervisors are the VM monitors used for making virtualization possible.It’s of two types of hypervisors:  Type 1 Hypervisor  Type 2 Hypervisor  In linux it’s recommended to use QEMU KVM as it’s Type 1.  Type 1 is also called bare-metal as it runs directly on the host’s hardware. eg: QEMU KVM, Microsoft Hyper-V  Type 2 is also called hosted as it runs on top of the host OS. eg: VMware, Virutal Box, Parallels Desktop"
  },
  
  {
    "title": "Ubuntu Initial Setup",
    "url": "/posts/init-ubuntuSetup/",
    "categories": "Setups",
    "tags": "ubuntu, linux, init, setup, blog",
    "date": "2023-11-14 11:48:48 +0545",
    





    
    "snippet": "The scripts have been verified on Ubuntu 22.04 LTS :#Essentialssudo apt remove firefox geary gnome-weather gnome-contacts gnome-system-monitor gnome-user-docs gnome-logs;sudo snap remove firefox;su...",
    "content": "The scripts have been verified on Ubuntu 22.04 LTS :#Essentialssudo apt remove firefox geary gnome-weather gnome-contacts gnome-system-monitor gnome-user-docs gnome-logs;sudo snap remove firefox;sudo apt update -y &amp;&amp; sudo apt upgrade -y;sudo apt install ubuntu-restricted-extras gufw htop curl wget git;#Nvida Graphic Driverapt list | grep nvidia; #View if Installedsudo apt install nvidia-driver-535;#Must Have Pkgssudo apt install qbittorrent vlc cheese;sudo apt install inkscape libreoffice; #Productivity Suite#Tweakssudo apt install chrome-gnome-shell gnome-shell-extensions gnome-tweaks;gsettings set org.gnome.shell.window-switcher current-workspace-only false;gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize';sudo sed -i 's/NoDisplay=true/NoDisplay=false/g' /etc/xdg/autostart/*.desktop;#Swappinesscat /proc/sys/vm/swappiness;sudo bash -c \"echo 'vm.swappiness = 10' &gt;&gt; /etc/sysctl.conf\";sudo sysctl -p;cat /proc/sys/vm/swappiness;For Lenovo laptops, save your battery health using conservation mode :cat /sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode;echo 1 | sudo tee /sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode;"
  }
  
]

